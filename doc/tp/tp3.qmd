---
title: "Discographie"
description: "TP3"
author: "Ludovic Deneuville"
format: 
  html:
    toc: true
    toc-location: left
    toc-expand: 3
from: markdown+emoji
number-sections: true
number-depth: 3
lightbox: true
---

:construction:

## Introduction {.unnumbered}

::: {.callout-important}
- Écrivez des requêtes jolies !
:::


## Lancement des services

Connectez-vous à l'une des 2 instances suivantes d'Onyxia :

- [Datalab du GENES](https://onyxia.lab.groupe-genes.fr/){target="_blank"}
- [Datalab SSPCloud de l'INSEE](https://datalab.sspcloud.fr/){target="_blank"} 
  - si besoin de créer un compte, utilisez votre mail ENSAI (`nom.prenom@eleve.ensai.fr`)

Et ensuite lancez les services suivants :

- [ ] PostgreSQL
- [ ] CloudBeaver


## Les données

Le thème du jour sera la musique.

### Chargez les données


- [ ] Copiez le contenu de ces 2 scripts sql 
  - [création des tables](./data/tp3-create-table.sql){target="_blank"} 
  - [insertion des données](./data/tp3-pop-table.sql){target="_blank"} 
- [ ] Collez-les dans la fenêtre SQL de CloudBeaver
- [ ] Exécutez les scripts
  - Cliquez sur la petite icone sous les triangles oranges qui ressemble à :scroll:
  - raccourci (ALT + X)










### Description


Les tables sont les suivantes :

* **artiste**([id_artiste]{.underline}, nom, code_pays, date_naissance, actif)
* **album**([id_album]{.underline}, titre, annee, #id_artiste)
* **chanson**([id_chanson]{.underline}, #id_artiste_principal, titre, duree, #id_album, annee)
* **playlist**([id_playlist]{.underline}, nom, date_creation, description)
* **playlist_chanson**([#id_playlist, #id_chanson]{.underline}, ordre, date_ajout)


### Description des tables

| **Catégorie**        | **Description**                                                                                                              |
| -------------------- | ---------------------------------------------------------------------------------------------------------------------------- |
| **artiste**          | Contient les informations sur les artistes (nom, pays, date de naissance, statut actif ou non).                              |
| **album**            | Liste des albums publiés par les artistes, avec l’année de sortie et la référence vers l’artiste concerné.                   |
| **chanson**          | Liste des chansons, avec leur artiste principal, durée, année et lien éventuel vers un album.                                |
| **playlist**         | Représente les playlists créées par les utilisateurs, avec un nom, une date de création et une description.                  |
| **playlist_chanson** | Table d’association entre les playlists et les chansons, contenant l’ordre des morceaux et la date d’ajout dans la playlist. |


### Modèle de données

![](./data/tp3-modele.PNG)


### Exploration des tables

- [ ] Listez toutes les chansons
- [ ] Listez les chansons (titre, année) ainsi que le nom de l'artiste
- [ ] Ajoutez le titre de l'album si celui-ci est précisé

Interessons nous maintenant aux playlists :

- [ ] Affichez les playlists
- [ ] Ajoutez les titres des chansons
  - classez par noms de playlists
- [ ] Ajoutez les noms des artistes
  - classez par noms de playlists, puis par noms d'artistes
- [ ] Quelle playlist a le plus de chansons ?
- [ ] Quelle playlist dure le plus longtemps ?

### Place aux artistes

- [ ] Listez les noms d'artistes ainsi que les titres de leurs chansons
- [ ] Comptez le nombre de chansons par artiste
- [ ] Classez par ordre décroissant
- [ ] Conservez uniquement les artistes ayant 20 chansons ou plus

Il y a des artistes solo et des groupes. Pour la groupe la date de naissance ne devrait pas être renseignée.

- [ ] Mettez à jour la table pour supprimer les dates de naissance des groupes
- [ ] Quel est le plus viel artiste solo en activité ?

Interessons nous maintenant aux pays des artistes.

- [ ] Comptez le nombre d'artistes par pays

Que fait cette requête ?

```{.sql}
SELECT DISTINCT ON (code_pays) code_pays, 
       nom, 
       date_naissance
  FROM artiste
 WHERE NOT groupe
 ORDER BY code_pays, date_naissance ASC;
```

- [ ] Construire la même requête avec une CTE


### Todo

- Chansons avec le même nom
- Chansons dans plusieurs playlists
- Créez votre playlist
- Artistes présent dans aucune playlist
- Artistes sans chansons



## Arrêtez votre service {.unnumbered}

C'est la fin du TP, vous pouvez maintenant sauvegarder votre travail et libérer les ressources réservées :

- [ ] Copiez votre code et collez le sur votre machine dans un fichier *.sql*
  - par exemple dans `P:/Cours1A/UE3-Bases-de-donnees-relationnelles/TP4/tp4.sql`
  - ou en téléchargeant depuis CloudBeaver le fichier sql (petit bouton avec un dossier et une flèche vers le bas)
- [ ] Retournez sur la page d'accueil du Datalab
- [ ] Allez dans *Mes Services* et supprimez votre service